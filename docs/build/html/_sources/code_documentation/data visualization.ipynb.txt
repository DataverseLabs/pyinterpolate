{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data visualization module\n",
    "\n",
    "Available methods:\n",
    "\n",
    "- interpolate_raster: interpolates raster from data points using ordinary kriging."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## interpolate_raster\n",
    "\n",
    "```python\n",
    "pyinterpolate.data_visualization.interpolate_raster.interpolate_raster(data,\n",
    "                                                                       dim=1000,\n",
    "                                                                       number_of_neighbors=4,\n",
    "                                                                       semivariogram_model=None)\n",
    "```\n",
    "\n",
    "Function interpolates raster from data points using ordinary kriging.\n",
    "\n",
    "\n",
    "INPUT:\n",
    "\n",
    "- **data**: (```numpy array``` / ```list```) ```[coordinate x, coordinate y, value]```,\n",
    "- **dim**: (```int```) number of pixels (points) of a larger dimension (it could be width or height),\n",
    "- **number_of_neighbors**: (```int```) default=16, number of points used to interpolate data,\n",
    "- **semivariogram_model**: (```TheoreticalSemivariance``` object) default=```None```, Theoretical Semivariogram model, if not provided then it is estimated from a given dataset.\n",
    "\n",
    "\n",
    "OUTPUT:\n",
    "\n",
    "- (```numpy array```) \n",
    "\n",
    "```python\n",
    "[\n",
    "    numpy array of interpolated values,\n",
    "    numpy array of interpolation errors,\n",
    "    [pixel size, min_x, max_x, min_y, max_y]\n",
    "]\n",
    "```"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
